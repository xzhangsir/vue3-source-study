{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["import { NodeTypes } from \"./ast\";\r\n\r\nfunction createParserContext(template){\r\n    return {\r\n      line:1,   //\u7B2C\u51E0\u884C\r\n      column:1, //\u7B2C\u51E0\u5217\r\n      offset:0,    //\u504F\u79FB\u91CF\r\n      source:template,  //\u6B64\u5B57\u6BB5\u4F1A\u88AB\u4E0D\u505C\u7684\u8FDB\u884C\u89E3\u6790  slice\r\n      originalSource:template\r\n    }\r\n}\r\n\r\nfunction isEnd(context){\r\n  // \u5982\u679C\u89E3\u6790\u5B8C\u6BD5\u540E\u4E3A\u7A7A\u5B57\u7B26\u4E32 \u8868\u793A\u89E3\u6790\u5B8C\u6BD5\r\n  return !context.source\r\n}\r\n\r\nfunction getCursor(context){\r\n  let {line,column,offset} = context\r\n  return {line,column,offset}\r\n}\r\nfunction advancePositionWithMutation(context,source,endIndex){\r\n  let linesCount = 0;\r\n  let linePos = -1;\r\n  for(let i = 0 ; i < endIndex ; i++){\r\n    if(source.charCodeAt(i) == 10){\r\n      // \u6362\u884C+1\r\n      linesCount++;\r\n      linePos = i\r\n    }\r\n  }\r\n  context.line += linesCount\r\n  context.offset += endIndex\r\n  context.column = linePos == -1 ? context.column + endIndex : endIndex - linePos\r\n  \r\n}\r\nfunction advanceBy(context,endIndex){\r\n  // \u6BCF\u6B21\u5220\u9664\u5185\u5BB9\u7684\u65F6\u5019  \u90FD\u8981\u66F4\u65B0\u6700\u65B0\u7684\u884C\u5217\u548C\u504F\u79FB\u91CF\u4FE1\u606F\r\n  let source = context.source\r\n  advancePositionWithMutation(context,source,endIndex)\r\n  context.source = source.slice(endIndex)\r\n}\r\nfunction parseTextData(context,endIndex){\r\n  const  rawText = context.source.slice(0,endIndex)\r\n  advanceBy(context,endIndex)  //\u5220\u9664\u6587\u672C\r\n  return rawText\r\n}\r\nfunction getSelection(context,start,end?){\r\n  end = end || getCursor(context)\r\n  return {\r\n    start,\r\n    end,\r\n    source:context.originalSource.slice(start.offset,end.offset)\r\n  }\r\n}\r\nfunction parseText(context){\r\n  // abc<a></a>{{abc}}\r\n  // \u5728\u89E3\u6790\u6587\u672C\u7684\u65F6\u5019  \u8981\u770B\u540E\u9762\u5230\u54EA\u91CC\u7ED3\u675F\r\n  let endTokens = ['<',\"{{\"]\r\n  // \u9ED8\u8BA4\u6587\u672C\u5230\u6700\u540E\u7ED3\u675F\r\n  let endIndex = context.source.length \r\n  for(let i = 0 ; i < endTokens.length ;i++){\r\n    let index = context.source.indexOf(endTokens[i],1)\r\n    // \u627E\u5230\u4E86 \u5E76\u4E14\u7B2C\u4E00\u6B21\u6BD4\u6574\u4E2A\u5B57\u7B26\u4E32\u5C0F\r\n    if(index !== -1 && endIndex > index){\r\n      endIndex = index\r\n    }\r\n  }\r\n\r\n  // \u521B\u5EFA \u884C\u5217\u4FE1\u606F\r\n\r\n  const start = getCursor(context) //\u5F00\u59CB\u4F4D\u7F6E\r\n  // \u53D6\u5185\u5BB9  advancePositionWithMutation\u518D\u83B7\u53D6\u7ED3\u675F\u4F4D\u7F6E\r\n  const content = parseTextData(context,endIndex)\r\n\r\n  return {\r\n    type:NodeTypes.TEXT,\r\n    content:content,\r\n    loc:getSelection(context,start)\r\n  } \r\n  \r\n}\r\n\r\nfunction parse(template){\r\n  // \u521B\u5EFA\u4E00\u4E2A\u89E3\u6790\u7684\u4E0A\u4E0B\u6587 \r\n  const context = createParserContext(template)\r\n\r\n  //  <  \u5143\u7D20\r\n  //  {{}} \u8868\u8FBE\u5F0F\r\n  //  \u5176\u4ED6 \u6587\u672C \u6CE8\u91CA\u7B49\r\n  const nodes = []\r\n  while(!isEnd(context)){\r\n    const source  = context.source\r\n    let node;\r\n    if(source.startsWith(\"{{\")){\r\n      \r\n    }else if(source.startsWith(\"<\")){\r\n\r\n    }\r\n\r\n    // \u6587\u672C\r\n    if(!node){\r\n      node = parseText(context)\r\n      \r\n    }\r\n    nodes.push(node)\r\n    break;\r\n  }\r\n  console.log(nodes);\r\n  \r\n\r\n  return context\r\n}\r\n\r\n\r\nexport function compile(template){\r\n  // \u4E09\u90E8\u66F2\uFF1A \u89E3\u6790  \u8F6C\u5316  \u751F\u6210\r\n\r\n  // \u5C06\u6A21\u677F \u8F6C\u5316\u4E3A\u62BD\u8C61\u8BED\u6CD5\u6811  html -> ast\r\n  const ast = parse(template)\r\n  return ast\r\n\r\n  // \u5BF9ast\u8BED\u6CD5\u6811\u8FDB\u884C\u9884\u5148\u5904\u7406\r\n  // transform(ast)\r\n\r\n  \r\n  // return genderate(ast)  //\u6700\u7EC8\u751F\u6210\u4EE3\u7801\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAEA,+BAA6B,UAAS;AAClC,WAAO;AAAA,MACL,MAAK;AAAA,MACL,QAAO;AAAA,MACP,QAAO;AAAA,MACP,QAAO;AAAA,MACP,gBAAe;AAAA,IACjB;AAAA,EACJ;AAEA,iBAAe,SAAQ;AAErB,WAAO,CAAC,QAAQ;AAAA,EAClB;AAEA,qBAAmB,SAAQ;AACzB,QAAI,EAAC,MAAK,QAAO,WAAU;AAC3B,WAAO,EAAC,MAAK,QAAO,OAAM;AAAA,EAC5B;AACA,uCAAqC,SAAQ,QAAO,UAAS;AAC3D,QAAI,aAAa;AACjB,QAAI,UAAU;AACd,aAAQ,IAAI,GAAI,IAAI,UAAW,KAAI;AACjC,UAAG,OAAO,WAAW,CAAC,KAAK,IAAG;AAE5B;AACA,kBAAU;AAAA,MACZ;AAAA,IACF;AACA,YAAQ,QAAQ;AAChB,YAAQ,UAAU;AAClB,YAAQ,SAAS,WAAW,KAAK,QAAQ,SAAS,WAAW,WAAW;AAAA,EAE1E;AACA,qBAAmB,SAAQ,UAAS;AAElC,QAAI,SAAS,QAAQ;AACrB,gCAA4B,SAAQ,QAAO,QAAQ;AACnD,YAAQ,SAAS,OAAO,MAAM,QAAQ;AAAA,EACxC;AACA,yBAAuB,SAAQ,UAAS;AACtC,UAAO,UAAU,QAAQ,OAAO,MAAM,GAAE,QAAQ;AAChD,cAAU,SAAQ,QAAQ;AAC1B,WAAO;AAAA,EACT;AACA,wBAAsB,SAAQ,OAAM,KAAK;AACvC,UAAM,OAAO,UAAU,OAAO;AAC9B,WAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA,QAAO,QAAQ,eAAe,MAAM,MAAM,QAAO,IAAI,MAAM;AAAA,IAC7D;AAAA,EACF;AACA,qBAAmB,SAAQ;AAGzB,QAAI,YAAY,CAAC,KAAI,IAAI;AAEzB,QAAI,WAAW,QAAQ,OAAO;AAC9B,aAAQ,IAAI,GAAI,IAAI,UAAU,QAAQ,KAAI;AACxC,UAAI,QAAQ,QAAQ,OAAO,QAAQ,UAAU,IAAG,CAAC;AAEjD,UAAG,UAAU,MAAM,WAAW,OAAM;AAClC,mBAAW;AAAA,MACb;AAAA,IACF;AAIA,UAAM,QAAQ,UAAU,OAAO;AAE/B,UAAM,UAAU,cAAc,SAAQ,QAAQ;AAE9C,WAAO;AAAA,MACL,MAAK;AAAA,MACL;AAAA,MACA,KAAI,aAAa,SAAQ,KAAK;AAAA,IAChC;AAAA,EAEF;AAEA,iBAAe,UAAS;AAEtB,UAAM,UAAU,oBAAoB,QAAQ;AAK5C,UAAM,QAAQ,CAAC;AACf,WAAM,CAAC,MAAM,OAAO,GAAE;AACpB,YAAM,SAAU,QAAQ;AACxB,UAAI;AACJ,UAAG,OAAO,WAAW,IAAI,GAAE;AAAA,MAE3B,WAAS,OAAO,WAAW,GAAG,GAAE;AAAA,MAEhC;AAGA,UAAG,CAAC,MAAK;AACP,eAAO,UAAU,OAAO;AAAA,MAE1B;AACA,YAAM,KAAK,IAAI;AACf;AAAA,IACF;AACA,YAAQ,IAAI,KAAK;AAGjB,WAAO;AAAA,EACT;AAGO,mBAAiB,UAAS;AAI/B,UAAM,MAAM,MAAM,QAAQ;AAC1B,WAAO;AAAA,EAOT;",
  "names": []
}
